<template>
    <WbForm
        ref="formRef"
        :label-width="100"
        :rule="formRules">
        <FormItem prop="dataSourceName" :label="$t('dataSourceManagement.dataSourceName')">
            <WbInput v-model="formModel.dataSourceName" :placeholder="$t('dataSourceManagement.dataSourceName')" />
        </FormItem>
        <FormItem prop="dataSourceDesc" :label="$t('dataSourceManagement.dataSourceDesc')">
            <WbInput v-model="formModel.dataSourceDesc" :placeholder="$t('dataSourceManagement.dataSourceDesc')" />
        </FormItem>
        <FormItem prop="subSystem" :label="$t('indexManagement.subsystem')">
            <Wb-select
                v-model="formModel.subSystemId"
                filterable
                options-value-name="enName"
                options-text-name="enName"
                :options="subSystems" />
        </FormItem>
        <FormItem prop="labels" :label="$t('myProject.label')">
            <WbInput v-model="formModel.labels" :placeholder="$t('myProject.label')" />
        </FormItem>
        <template v-for="field in fields">
            <FormItem
                v-if="field.show"
                :key="field.id"
                :label="field.name"
                :prop="field.key">
                <WbInput
                    v-if="field.valueType === 'TEXT'"
                    v-model="formModel.connectParams[field.key]"
                    :placeholder="field.description" />
                <WbInput
                    v-if="field.valueType === 'PASSWORD'"
                    v-model="formModel.connectParams[field.key]"
                    type="password"
                    :placeholder="field.description" />
                <WbInput
                    v-if="field.valueType === 'NUMBER'"
                    v-model="formModel.connectParams[field.key]"
                    type="number"
                    :placeholder="field.description" />
                <WbInput
                    v-if="field.valueType === 'TEXTAREA'"
                    v-model="formModel.connectParams[field.key]"
                    type="textarea"
                    :placeholder="field.description" />
                <WbSelect
                    v-if="field.valueType === 'SELECT'"
                    v-model="formModel.connectParams[field.key]"
                    :placeholder="field.description"
                    @on-change="selectHandler($event, field)">
                    <WbOption
                        v-for="item in field.dataSource"
                        :key="item.value"
                        :label="item.label"
                        :value="item.value" />
                </WbSelect>
            </FormItem>
        </template>
    </WbForm>
</template>
<script>
import { FORM_MODE } from '../../../assets/js/const';
export const buildSearchParamsStr = (params = {}) => {
    return Object.entries(params).map((entry) => `${entry[0]}=${entry[1]}`).join('&');
};
export default {
    props: {
        mode: {
            required: true,
            validator: (value) => {
                return value === '' || Object.values(FORM_MODE).includes(value);
            }
        },
        clusterName: {
            type: String,
            required: true
        },
        proxyUser: {
            type: String,
            required: false,
            default: ''
        },
        formModel: {
            type: Object,
            required: true
        },
        formRules: {
            type: Object,
            required: false,
            default: () => {
                return {};
            }
        },
        fields: {
            type: Array,
            required: true
        },
        subSystems: {
            type: Array,
            required: true
        },
        dataSourceFormRef: null
    },
    FesData() {
        return {
            FORM_MODE
        };
    },
    FesReady() {
        this.$emit('update:form-ref', this.$refs.formRef);
    },
    methods: {
        selectHandler(value, field) {
            this.$emit('on-select', {value, field});
        }
    }
};
</script>
