<template>
    <div class="left-menu" :class="{'slideOutLeft': isClose === true, 'slideInLeft': isClose === false}">
        <WbMenu v-show="!isClose" :class="{'fadeOut': isClose === true,'fadeIn': isClose === false}" :active-name.sync="activeName" :auto-close="false" @select="select">
            <div v-for="(item) in items" :key="item.name">
                <WbMenuItem v-if="item.subItems.length === 0" :name="item.name" class="menu-item">
                    <img :src="item.icon" class="title-icon">{{ item.title }}
                </WbMenuItem>
                <WbSubMenu v-else :title="item.title" :expand="item.expand" class="submenu" :icon="item.icon">
                    <WbMenuItem v-for="(subItem) in item.subItems" :key="subItem.name" :icon="subItem.icon" :name="subItem.name" class="menu-item">
                        {{ subItem.title }}
                    </WbMenuItem>
                </WbSubMenu>
            </div>
        </WbMenu>
        <div class="toggle" :class="{'close': isClose}" @click="toggleBtn">
            <Icon :type="isClose ? 'ios-arrow-forward' : 'ios-arrow-back'" class="icon" size="10" />
            <Icon :type="isClose ? 'ios-arrow-forward' : 'ios-arrow-back'" class="icon" size="10" />
        </div>
    </div>
</template>

<script>
    export default {
        props: {
            defaultActive: {
                type: String,
                default: '0'
            },
            items: {
                type: Array,
                default: () => []
            }
        },
        FesData() {
            return {
                activeName: this.defaultActive,
                isClose: null
            }
        },
        watch: {
            // 每一次activeName变化就触发
            activeName: function (newActiveName) {
                this.changeActiveName(newActiveName);
                this.changePath(newActiveName);
            },
            defaultActive(val) {
                this.activeName = val;
            }
        },
        methods: {
            // 更换当前activeName
            changeActiveName(name) {
                this.activeName = name;
            },
            // 更新path
            changePath(name) {
                let item
                for (let i = 0; i < this.items.length; i++) {
                    // 遍历menu里的items
                    if (this.items[i].name === name) {
                        item = this.items[i];
                        break;
                    }
                    // 遍历menu里的subItems
                    if (this.items[i].subItems) {
                        item = this.items[i].subItems.find(j => j.name === name);
                        if (item) break;
                    }
                }
                if (item) this.FesApp.router.push(item.path);
            },
            // 每次点击menu中的某个item触发的事件
            select(name) {
                this.changeActiveName(name);
                this.changePath(name);
            },
            toggleBtn () {
                this.isClose = !this.isClose
            }
        }
    }
</script>

<style scoped lang="scss">
    @import '../assets/styles/variables';
    @import '../assets/styles/mixins';

    .left-menu {
        flex: 0 0 180px;
        border-right: 1px solid $border-color;
        position: relative;
        background-color: #fff;
        height: 100%;
        user-select: none;
        .toggle {
            position: absolute;
            right: 0px;
            top: 6px;
            text-align: center;
            cursor: pointer;
            border-radius: 4px 0 0 4px;
            background: #f3f3f3;
            width: 16px;
            height: 28px;
            line-height: 28px;

            &:hover .icon {
                color: $primary-hover-color;
            }

            .icon {
                color: $third-text-color;
            }
        }

        .close {
            right: 20px;
            transform: translateX(50%);
        }
    }
    .title-menu-min{
        overflow-y: scroll !important;
    }
    .title-menu-min::-webkit-scrollbar {/*滚动条整体样式*/
        width: 4px;     /*高宽分别对应横竖滚动条的尺寸*/
        height: 4px;
    }
    .title-menu-min::-webkit-scrollbar-thumb {/*滚动条里面小方块*/
        border-radius: 5px;
        box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
        background: rgba(0,0,0,0.2);
    }
    .title-menu-min::-webkit-scrollbar-track {/*滚动条里面轨道*/
        box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
        border-radius: 0;
        background: rgba(0,0,0,0.1);
    }
    @keyframes slideOutLeft {
        from {
            flex-basis: 180px;
        }

        to {
            flex-basis: 40px;
        }

    }

    .slideOutLeft {
        animation-duration: 0.5s;
        animation-delay: 0s;
        animation-name: slideOutLeft;
        animation-fill-mode: forwards;
        animation-timing-function: ease-in;
    }

    @keyframes slideInLeft {
        from {
            flex-basis: 40px;
        }
        to {
            flex-basis: 180px;
        }
    }

    .slideInLeft {
        animation-duration: 0.5s;
        animation-delay: 0s;
        animation-name: slideInLeft;
        animation-fill-mode: forwards;
        animation-timing-function: ease-in;
    }

    @keyframes fadeOut {
        from {
            opacity: 1;
        }
        to {
            opacity: 0;
        }
    }

    .fadeOut {
        overflow: hidden;
        animation-duration: 0.5s;
        animation-delay: 0s;
        animation-name: fadeOut;
        animation-fill-mode: forwards;
        animation-timing-function: ease-in;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    .fadeIn {
        overflow: hidden;
        animation-duration: 0.5s;
        animation-delay: 0s;
        animation-name: fadeIn;
        animation-fill-mode: forwards;
        animation-timing-function: ease-in;
    }

    .title-icon {
        margin-right: 10px;
        width: 22px;
        height: 22px;
        vertical-align: middle;
    }
</style>

<style lang="scss">
    @import '../assets/styles/variables';
    @import '../assets/styles/mixins';
    // 给当前选择的item高亮
    .left-menu .ui-menu .menu-item.ui-menu-item-actived {
        background: #f2f7ff;
        color: #3387ff;
    }
    // 给当前选择的某个subItem高亮，要写成下面这样才能使特殊性盖过fes原生的
    .left-menu .ui-menu .submenu .menu-item.ui-menu-item-actived {
        background: #f2f7ff;
        color: #3387ff;
    }
    // 使subItem的层级显示更加明显
    .left-menu .ui-menu .submenu .menu-item {
        text-align: left;
        left: 0;
        width: 100%;
    }
    // 清除掉每一个item的右边框
    .left-menu .menu-item {
        font-size: 16px;
        border-right: none;
    }
    // 清除掉每一个item的右边框
    .left-menu .ui-menu:before {
        display: none;
    }
    // 清除掉有subItem的title的右边框
    .left-menu .ui-menu .submenu .ui-menu-submenu-title {
        border-right: none;
        font-size: 16px;
    }
</style>
